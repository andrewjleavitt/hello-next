{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/andrewleavitt/workspace/hello-next/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/myLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Content = function Content() {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Show Name\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"This is the blog content.\"), \"image\");\n};\n\nvar Page = function Page() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n};\n\nPage.getInitialProps = function _callee(context) {\n  var id, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          console.log(\"Fetched Show\");\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/andrewleavitt/workspace/hello-next/pages/p/[id].js"],"names":["Layout","fetch","Content","Page","getInitialProps","context","id","query","res","json","data","console","log"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,UADJ;AAOH,CARD;;AAUA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAND;;AAQAA,IAAI,CAACC,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,UAAAA,EADW,GACJD,OAAO,CAACE,KADJ,CACXD,EADW;AAAA;AAAA,2CAEDL,KAAK,wCAAiCK,EAAjC,EAFJ;;AAAA;AAEbE,UAAAA,GAFa;AAAA;AAAA,2CAGAA,GAAG,CAACC,IAAJ,EAHA;;AAAA;AAGbC,UAAAA,IAHa;AAKnBC,UAAAA,OAAO,CAACC,GAAR;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAeT,IAAf","sourcesContent":["import Layout from '../../components/myLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Content = () => {\n    return (\n        <div>\n            <h1>Show Name</h1>\n            <p>This is the blog content.</p>\n            image\n        </div>\n    );\n}\n\nconst Page = () => {\n    return (\n        <Layout>\n            <Content />\n        </Layout>\n    );\n}\n\nPage.getInitialProps = async function(context) {\n    const { id } = context.query;\n    const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n    const data = await res.json();\n\n    console.log(`Fetched Show`)\n}\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}